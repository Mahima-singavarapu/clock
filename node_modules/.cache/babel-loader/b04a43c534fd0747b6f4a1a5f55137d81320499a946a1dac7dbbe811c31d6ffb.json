{"ast":null,"code":"import React,{useState}from\"react\";function App(){setInterval(updateTime,1000);const now=new Date().toLocaleTimeString(\"en-GB\");const[time,setTime]=useState(now);function updateTime(){const newTime=new Date().toLocaleTimeString(\"en-GB\");setTime(newTime);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"clock\"},\"Clock\"),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",null,time)));}export default App;","map":{"version":3,"names":["React","useState","App","setInterval","updateTime","now","Date","toLocaleTimeString","time","setTime","newTime","createElement","Fragment","className"],"sources":["C:/Users/Mahima.S/OneDrive/Desktop/Tech/react new/Online/Clock/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  setInterval(updateTime, 1000);\n\n  const now = new Date().toLocaleTimeString(\"en-GB\");\n  const [time, setTime] = useState(now);\n\n  function updateTime() {\n    const newTime = new Date().toLocaleTimeString(\"en-GB\");\n    setTime(newTime);\n  }\n\n  return (\n    <>\n    <h1 className=\"clock\">Clock</h1>\n    <div className=\"container\">\n      <h1>{time}</h1>\n      {/* <button onClick={updateTime}>Get Time</button> */}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACbC,WAAW,CAACC,UAAU,CAAE,IAAI,CAAC,CAE7B,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC,CAClD,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAACI,GAAG,CAAC,CAErC,QAAS,CAAAD,UAAUA,CAAA,CAAG,CACpB,KAAM,CAAAM,OAAO,CAAG,GAAI,CAAAJ,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC,CACtDE,OAAO,CAACC,OAAO,CAAC,CAClB,CAEA,mBACEV,KAAA,CAAAW,aAAA,CAAAX,KAAA,CAAAY,QAAA,mBACAZ,KAAA,CAAAW,aAAA,OAAIE,SAAS,CAAC,OAAO,EAAC,OAAS,CAAC,cAChCb,KAAA,CAAAW,aAAA,QAAKE,SAAS,CAAC,WAAW,eACxBb,KAAA,CAAAW,aAAA,WAAKH,IAAS,CAEX,CACH,CAAC,CAEP,CAEA,cAAe,CAAAN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}